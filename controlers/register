const express = require("express");
const router = express.Router();
const bcrypt = require("bcrypt");
const app = express();
const User = require("../database/models/user");
const { body, validationResult } = require("express-validator");

app.use(express.json());

async function checkIfUserExists(mail) {
  try {
    const user = await User.query().where("mail", mail);
    return user;
  } catch (err) {
    throw err;
  }
}

async function addUser(mail, username, password) {
  try {
    const user = await User.query().insert({
      mail: mail,
      login: username,
      password: password,
    });
    return user;
  } catch (err) {
    throw err;
  }
}

router.post(
  "/",
  [
    body("Mail").isEmail().withMessage("Please write corect Mail"),

    body("Password")
      .isLength({ min: 8 })
      .withMessage("Password must contains over 8 characters")
      .matches(/^(?=.*[!@#$%^&*()\-_=+{};:,<.>])|(?=.*[A-Z])|(?=.*\d)/)
      .withMessage(
        "pass is to simply add either !-? or CAPITAL LETTER or a 123.."
      )
      .blacklist("Password"),
  ],
  async (req, res) => {
    // create new user

    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      //return erors
      return res.status(400).json({ errors: errors.array() });
    }
    const passFromForm = req.body.Password;
    const userPassEncrypt = await bcrypt.hash(passFromForm, 10);
    const sentEmail = req.body.Mail;
    const sentUserName = req.body.UserName;
    const sentPassword = userPassEncrypt;

    try {
      const userExists = await checkIfUserExists(sentEmail);
      if (userExists.length > 0) {
        res.send({ message: "User already exists" });
      } else {
        await addUser(sentEmail, sentUserName, sentPassword);
        res.send({ message: "User added" });
      }
    } catch (error) {
      res.status(500).send({ message: "Internal Server Error" });
      // console.error("Error:", error);
    }
  }
);

module.exports = router;
